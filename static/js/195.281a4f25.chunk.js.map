{"version":3,"file":"static/js/195.281a4f25.chunk.js","mappings":"2QAEaA,EAAUC,EAAAA,GAAAA,IAAH,qJASPC,EAAcD,EAAAA,GAAAA,KAAH,0PAaXE,EAAYF,EAAAA,GAAAA,MAAH,oEAKTG,EAAeH,EAAAA,GAAAA,EAAH,gF,gDCdnBI,EAASC,EAAAA,GACL,CACNC,KAAMD,EAAAA,KAAaE,WACnBC,MAAOH,EAAAA,KAAaG,QAAQD,WAC5BE,SAAUJ,EAAAA,KAEPK,IAAI,EAAG,iBACPC,IAAI,GAAI,kBACRJ,aAEJA,WAgDH,MA9CA,WAA6B,IAAD,MACpBK,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MACjB,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYf,KAJtBgB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAMf,OACE,SAACvB,EAAD,UACIa,GA0BA,SAAC,KAAD,CAAUY,GAAG,eAzBb,UAACvB,EAAD,CAAawB,SAAUJ,GAJR,SAAAK,GAAI,OAAIX,GAASY,EAAAA,EAAAA,IAAiBD,OAIEE,aAAa,MAAhE,WACE,8BACE,iCACA,SAAC1B,GAAD,UAAekB,EAAS,WACxB,SAACjB,EAAD,oBAAemB,EAAOhB,YAAtB,aAAe,EAAauB,cAE9B,8BACE,kCACA,SAAC3B,GAAD,UAAekB,EAAS,YACxB,SAACjB,EAAD,oBAAemB,EAAOd,aAAtB,aAAe,EAAcqB,cAE/B,8BACE,qCACA,SAAC3B,GAAD,QAAW4B,KAAK,YAAeV,EAAS,eACxC,SAACjB,EAAD,oBAAemB,EAAOb,gBAAtB,aAAe,EAAiBoB,cAElC,SAAC3B,EAAD,CACE4B,KAAK,SACLC,MAAO,CACLC,gBAAiB,cACjBC,OAAQ","sources":["components/RegistrationPage/RegistrationView/RegistrationView.styled.jsx","components/RegistrationPage/RegistrationView/RegistrationView.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 800px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nexport const FormWrapper = styled.form`\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n  padding: 16px;\n  margin: 0 auto;\n  width: 400px;\n  border-radius: 12px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 4px 8px;\n  border-radius: 8px;\n`;\n\nexport const ErrorMessage = styled.p`\n  color: red;\n  font-size: 16px;\n  font-weight: 500;\n`;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport {\n  Wrapper,\n  FormWrapper,\n  FormInput,\n  ErrorMessage,\n} from \"./RegistrationView.styled\";\nimport { userRegistration } from \"redux/authorization/authorization-operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserLogin } from \"redux/authorization/authorization-selectors\";\nimport { Navigate } from \"react-router-dom\";\n\nconst schema = yup\n  .object({\n    name: yup.string().required(),\n    email: yup.string().email().required(),\n    password: yup\n      .string()\n      .min(7, \"Min 7 symbols\")\n      .max(16, \"Max 16 symbols\")\n      .required(),\n  })\n  .required();\n\nfunction RegistrationView() {\n  const isLogin = useSelector(getUserLogin);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onFormSumbit = data => dispatch(userRegistration(data));\n  return (\n    <Wrapper>\n      {!isLogin ? (\n        <FormWrapper onSubmit={handleSubmit(onFormSumbit)} autoComplete=\"off\">\n          <label>\n            <p>Name</p>\n            <FormInput {...register(\"name\")} />\n            <ErrorMessage>{errors.name?.message}</ErrorMessage>\n          </label>\n          <label>\n            <p>Email</p>\n            <FormInput {...register(\"email\")} />\n            <ErrorMessage>{errors.email?.message}</ErrorMessage>\n          </label>\n          <label>\n            <p>Password</p>\n            <FormInput type=\"password\" {...register(\"password\")} />\n            <ErrorMessage>{errors.password?.message}</ErrorMessage>\n          </label>\n          <FormInput\n            type=\"submit\"\n            style={{\n              backgroundColor: \"transparent\",\n              cursor: \"pointer\",\n            }}\n          />\n        </FormWrapper>\n      ) : (\n        <Navigate to=\"/contacts\" />\n      )}\n    </Wrapper>\n  );\n}\n\nexport default RegistrationView;\n"],"names":["Wrapper","styled","FormWrapper","FormInput","ErrorMessage","schema","yup","name","required","email","password","min","max","isLogin","useSelector","getUserLogin","dispatch","useDispatch","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","to","onSubmit","data","userRegistration","autoComplete","message","type","style","backgroundColor","cursor"],"sourceRoot":""}