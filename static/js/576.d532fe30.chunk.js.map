{"version":3,"file":"static/js/576.d532fe30.chunk.js","mappings":"2QAEaA,EAAUC,EAAAA,GAAAA,IAAH,qJASPC,EAAcD,EAAAA,GAAAA,KAAH,0PAaXE,EAAYF,EAAAA,GAAAA,MAAH,oEAKTG,EAAeH,EAAAA,GAAAA,EAAH,gF,gDCdnBI,EAASC,EAAAA,GACL,CACNC,MAAOD,EAAAA,KAAaC,QAAQC,WAC5BC,SAAUH,EAAAA,KAAaE,aAExBA,WAwCH,MAtCA,WAA8B,IAAD,IACrBE,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MACjB,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYZ,KAJtBa,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAMf,OACE,SAACpB,EAAD,UACIU,GAkBA,SAAC,KAAD,CAAUY,SAAO,EAACC,GAAG,eAjBrB,UAACrB,EAAD,CAAasB,SAAUL,GAJR,SAAAM,GAAI,OAAIZ,GAASa,EAAAA,EAAAA,IAAUD,OAISE,aAAa,MAAhE,WACE,8BACE,kCACA,SAACxB,GAAD,UAAee,EAAS,YACxB,SAACd,EAAD,oBAAegB,EAAOb,aAAtB,aAAe,EAAcqB,cAE/B,8BACE,qCACA,SAACzB,GAAD,QAAW0B,KAAK,YAAeX,EAAS,eACxC,SAACd,EAAD,oBAAegB,EAAOX,gBAAtB,aAAe,EAAiBmB,cAElC,SAACzB,EAAD,CACE0B,KAAK,SACLC,MAAO,CAAEC,gBAAiB,cAAeC,OAAQ","sources":["components/AuthorizationPage/AuthorizationView/AuthorizationView.styled.jsx","components/AuthorizationPage/AuthorizationView/AuthorizationView.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 800px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nexport const FormWrapper = styled.form`\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n  padding: 16px;\n  margin: 0 auto;\n  width: 400px;\n  border-radius: 12px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 4px 8px;\n  border-radius: 8px;\n`;\n\nexport const ErrorMessage = styled.p`\n  color: red;\n  font-size: 16px;\n  font-weight: 500;\n`;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport {\n  Wrapper,\n  FormWrapper,\n  FormInput,\n  ErrorMessage,\n} from \"./AuthorizationView.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userLogin } from \"redux/authorization/authorization-operations\";\nimport { getUserLogin } from \"redux/authorization/authorization-selectors\";\nimport { Navigate } from \"react-router-dom\";\n\nconst schema = yup\n  .object({\n    email: yup.string().email().required(),\n    password: yup.string().required(),\n  })\n  .required();\n\nfunction AuthorizationView() {\n  const isLogin = useSelector(getUserLogin);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onFormSumbit = data => dispatch(userLogin(data));\n  return (\n    <Wrapper>\n      {!isLogin ? (\n        <FormWrapper onSubmit={handleSubmit(onFormSumbit)} autoComplete=\"off\">\n          <label>\n            <p>Email</p>\n            <FormInput {...register(\"email\")} />\n            <ErrorMessage>{errors.email?.message}</ErrorMessage>\n          </label>\n          <label>\n            <p>Password</p>\n            <FormInput type=\"password\" {...register(\"password\")} />\n            <ErrorMessage>{errors.password?.message}</ErrorMessage>\n          </label>\n          <FormInput\n            type=\"submit\"\n            style={{ backgroundColor: \"transparent\", cursor: \"pointer\" }}\n          />\n        </FormWrapper>\n      ) : (\n        <Navigate replace to=\"/contacts\" />\n      )}\n    </Wrapper>\n  );\n}\n\nexport default AuthorizationView;\n"],"names":["Wrapper","styled","FormWrapper","FormInput","ErrorMessage","schema","yup","email","required","password","isLogin","useSelector","getUserLogin","dispatch","useDispatch","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","replace","to","onSubmit","data","userLogin","autoComplete","message","type","style","backgroundColor","cursor"],"sourceRoot":""}