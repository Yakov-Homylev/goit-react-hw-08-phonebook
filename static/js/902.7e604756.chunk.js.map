{"version":3,"file":"static/js/902.7e604756.chunk.js","mappings":"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","sources":["components/ContactsPage/ContactForm/ContactForm.styled.jsx","components/ContactsPage/ContactForm/ContactForm.jsx","components/ContactsPage/Filter/Filter.styled.jsx","components/ContactsPage/Filter/Filter.jsx","components/ContactsPage/ContactList/ContactList.styled.jsx","components/ContactsPage/ContactList/ContactItem.jsx","components/ContactsPage/ContactList/ContactList.jsx","components/ContactsPage/ContactsView/ContactsView.styled.jsx","components/ContactsPage/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\n\nexport const InputName = styled.label`\n  font-weight: 500;\n  margin-bottom: 12px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px 8px;\n  border-radius: 8px;\n  margin-left: 8px;\n`;\n\nexport const AddButoon = styled.button`\n  padding: 4px 8px;\n  border-radius: 8px;\n  background-color: transparent;\n  transition: background-color 250ms cubic-bezier(0.47, 0, 0.745, 0.715);\n  cursor: pointer;\n\n  :hover {\n    background-color: aqua;\n  }\n`;\n","import React from \"react\";\nimport toast from \"react-hot-toast\";\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from \"redux/contacts/contacts\";\nimport { Form, InputName, Input, AddButoon } from \"./ContactForm.styled\";\n\nfunction ContactForm() {\n  const [addContact] = useAddContactMutation();\n  const { data } = useGetContactsQuery();\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name: e.target.name.value,\n      number: e.target.number.value,\n    };\n\n    const isNameIncludeInArray = data.find(\n      contact => contact.name === newContact.name\n    );\n    const isNumberIncludeInArray = data.find(\n      contact => contact.number === newContact.number\n    );\n\n    if (isNameIncludeInArray) {\n      return toast.error(\"This name in phonebook!\");\n    }\n    if (isNumberIncludeInArray) {\n      return toast.error(\"This number in phonebook\");\n    }\n\n    addContact(newContact);\n\n    toast.success(\"Contact create\");\n\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <InputName>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </InputName>\n      <InputName>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </InputName>\n\n      <AddButoon type=\"submit\">Add contacts</AddButoon>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const Section = styled.div`\n  margin-bottom: 12px;\n`;\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  margin-bottom: 8px;\n`;\nexport const FilterInput = styled.input`\n  padding: 4px 8px;\n  border-radius: 8px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Section, Title, FilterInput } from \"./Filter.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { filter } from \"redux/filter/filter-action\";\nimport { useSelector } from \"react-redux\";\n\nexport default function Filter({ title }) {\n  const dispatch = useDispatch();\n  const filterQuery = useSelector(state => state.filter);\n\n  const onFilterChange = e => {\n    dispatch(filter(e.target.value));\n  };\n\n  return (\n    <Section>\n      <Title>{title}</Title>\n      <FilterInput value={filterQuery} type=\"text\" onChange={onFilterChange} />\n    </Section>\n  );\n}\n\nFilter.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n\n  padding: 0;\n  margin: 0 auto;\n\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  padding: 8px;\n\n  gap: 12px;\n  border-radius: 12px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const NumberSpan = styled.span`\n  font-weight: 600;\n  margin-left: 4px;\n  margin-right: 4px;\n`;\n\nexport const DeleteButton = styled.button`\n  padding: 4px;\n  border-radius: 4px;\n  background-color: transparent;\n  transition: background-color 250ms cubic-bezier(0.785, 0.135, 0.15, 0.86);\n  cursor: pointer;\n\n  :hover {\n    background-color: skyblue;\n  }\n  :disabled {\n    background-color: red;\n  }\n`;\n\nexport const Notification = styled.p`\n  color: red;\n  font-weight: 700;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item, NumberSpan, DeleteButton } from \"./ContactList.styled\";\nimport { useDeleteContactMutation } from \"redux/contacts/contacts\";\nimport toast from \"react-hot-toast\";\nimport Loader from \"../../Loader/Loader\";\n\nexport default function ContactItem({ id, name, number, setDeleted }) {\n  const [onDeleteClick, { isLoading }] = useDeleteContactMutation();\n\n  const onBtnClick = () => {\n    setDeleted(true);\n    onDeleteClick(id);\n    toast.success(\"Contact delete\");\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Item>\n        {name + \":\"} <NumberSpan>{number}</NumberSpan>\n        <DeleteButton type=\"button\" disabled={isLoading} onClick={onBtnClick}>\n          Delete\n        </DeleteButton>\n      </Item>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import React, { useState, useEffect } from \"react\";\nimport ContactItem from \"./ContactItem\";\nimport { List, Notification } from \"./ContactList.styled\";\nimport { useGetContactsQuery } from \"redux/contacts/contacts\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"../../Loader/Loader\";\nimport { filter } from \"redux/filter/filter-action\";\n\nexport default function ContactList() {\n  const { data, isLoading } = useGetContactsQuery();\n  const filterQuery = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const [deleted, setDeleted] = useState(false);\n\n  let visibleContacts = [];\n\n  if (!isLoading) {\n    visibleContacts = data.filter(contact =>\n      contact.name.toLowerCase().includes(filterQuery)\n    );\n  }\n\n  const isContactsNotEmpty = visibleContacts && visibleContacts.length > 0;\n  const clearFilterValue =\n    visibleContacts.length === 0 && !isLoading && deleted;\n\n  useEffect(() => {\n    if (clearFilterValue) {\n      dispatch(filter(\"\"));\n      setDeleted(false);\n    }\n  }, [clearFilterValue, dispatch]);\n\n  return (\n    <>\n      <List>\n        {isLoading && <Loader />}\n        {isContactsNotEmpty &&\n          visibleContacts.map(el => {\n            return (\n              <ContactItem\n                key={el.id}\n                id={el.id}\n                name={el.name}\n                number={el.number}\n                setDeleted={setDeleted}\n              />\n            );\n          })}\n      </List>\n      {!isContactsNotEmpty && <Notification>This list is empty</Notification>}\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n","import ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport ContactList from \"../ContactList/ContactList\";\nimport { Wrapper } from \"./ContactsView.styled\";\nimport { Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { getUserLogin } from \"redux/authorization/authorization-selectors\";\n\nfunction ContactsView() {\n  const isLogin = useSelector(getUserLogin);\n\n  return (\n    <Wrapper>\n      {isLogin ? (\n        <>\n          <h1>Phonebook</h1>\n          <ContactForm />\n\n          <h2>Contacts</h2>\n          <Filter title=\"Find contacts by name\" />\n          <ContactList />\n        </>\n      ) : (\n        <Navigate replace to=\"/login\" />\n      )}\n    </Wrapper>\n  );\n}\n\nexport default ContactsView;\n"],"names":["Form","styled","InputName","Input","AddButoon","useAddContactMutation","addContact","data","useGetContactsQuery","onSubmit","e","preventDefault","newContact","name","target","value","number","isNameIncludeInArray","find","contact","isNumberIncludeInArray","toast","reset","type","pattern","title","required","Section","Title","FilterInput","Filter","dispatch","useDispatch","filterQuery","useSelector","state","filter","onChange","List","Item","NumberSpan","DeleteButton","Notification","ContactItem","id","setDeleted","useDeleteContactMutation","onDeleteClick","isLoading","Loader","disabled","onClick","ContactList","useState","deleted","visibleContacts","toLowerCase","includes","isContactsNotEmpty","length","clearFilterValue","useEffect","map","el","Wrapper","isLogin","getUserLogin","replace","to"],"sourceRoot":""}